(()=>{"use strict";function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var t=function(){function t(e,r){var n=e.items,o=e.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderedItems=n,this._renderer=o,this._container=document.querySelector(r)}var r,n;return r=t,(n=[{key:"renderCards",value:function(){var e=this;this._renderedItems.forEach((function(t){return e._renderer(t)}))}},{key:"addCardToContainer",value:function(e){this._container.prepend(e)}}])&&e(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),t}(),r=document.querySelector(".popup_type_profile"),n=document.querySelector(".popup_type_card-add"),o=document.querySelector(".user__edit-button"),i=document.querySelector(".user__add-button"),u=document.querySelector(".popup_type_picture"),c=document.querySelector("#user"),a=document.querySelector("#profile"),s=document.querySelector(".new-place-popup-form"),l=document.querySelector(".edit-popup-form"),p=document.querySelector(".popup__image"),f=document.querySelector(".popup__figcaption"),d={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__submit-button",inputErrorSelector:function(e){return".error-".concat(e.name)},inactiveButtonClass:"popup__submit-button_inactive",inputErrorBorderClass:"popup__input_error",errorTextClass:"popup__input-span"};function h(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var y=function(){function e(t,r){var n=r.handleCardClick,o=r.cardTemplateSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._cardTemplateSelector=o,this._card=document.querySelector(this._cardTemplateSelector).content.querySelector(".card").cloneNode(!0),this._cardImage=this._card.querySelector(".card__image"),this._cardTitle=this._card.querySelector(".card__name"),this._cardLikeBtn=this._card.querySelector(".card__like-button"),this._cardTrashBtn=this._card.querySelector(".card__trash-button"),this._cardName=t.name,this._cardLink=t.link,this._handleCardClick=n}var t,r;return t=e,(r=[{key:"createCard",value:function(){return this._setEventListener(),this._cardImage.src=this._cardLink,this._cardImage.alt=this._cardName,this._cardTitle.textContent=this._cardName,this._card}},{key:"_handlerLikeButton",value:function(){this._cardLikeBtn.classList.toggle("card__like-button_active")}},{key:"_deleteCardByButton",value:function(){this._card.remove(),this._card=null}},{key:"_setEventListener",value:function(){var e=this;this._cardLikeBtn.addEventListener("click",(function(){e._handlerLikeButton()})),this._cardTrashBtn.addEventListener("click",(function(){e._deleteCardByButton()})),this._cardImage.addEventListener("click",(function(){e._handleCardClick()}))}}])&&h(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function _(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var v=function(){function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._form=r,this._inputList=Array.from(this._form.querySelectorAll(this._config.inputSelector)),this._submitBtn=this._form.querySelector(this._config.submitButtonSelector)}var t,r;return t=e,(r=[{key:"enableValidation",value:function(){this._form.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"_setEventListeners",value:function(){var e=this;this.toggleSubmitButton(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e.toggleSubmitButton()}))}))}},{key:"_showError",value:function(e,t){var r=this._form.querySelector(this._config.inputErrorSelector(e));e.classList.add(this._config.inputErrorBorderClass),r.textContent=t}},{key:"_hideError",value:function(e){var t=this._form.querySelector(this._config.inputErrorSelector(e));e.classList.remove(this._config.inputErrorBorderClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideError(e):this._showError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"toggleSubmitButton",value:function(){!0===this._hasInvalidInput()?this._inactiveSubmitButton(this._submitBtn):this._activeSubmitButton(this._submitBtn)}},{key:"_activeSubmitButton",value:function(){this._submitBtn.removeAttribute("disabled"),this._submitBtn.classList.remove(this._config.inactiveButtonClass)}},{key:"_inactiveSubmitButton",value:function(){this._submitBtn.setAttribute("disabled",!0),this._submitBtn.classList.add(this._config.inactiveButtonClass)}},{key:"resetError",value:function(){var e=this;this._inputList.forEach((function(t){e._hideError(t)})),this.toggleSubmitButton()}}])&&_(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function m(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var b=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=t,this._handleEscClose=this._handleEscClose.bind(this)}var t,r;return t=e,(r=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleOverlayClose",value:function(e){e.stopPropagation(),(e.target.classList.contains("popup")||e.target.classList.contains("popup__close-button"))&&this.close()}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){e._handleOverlayClose(t)}))}}])&&m(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function g(e){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},g(e)}function S(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function k(){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=w(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},k.apply(this,arguments)}function w(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}function E(e,t){return E=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},E(e,t)}function O(e,t){if(t&&("object"===g(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function C(e){return C=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},C(e)}var j=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&E(e,t)}(u,e);var t,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(n);if(o){var r=C(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return O(this,e)});function u(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),i.call(this,e)}return t=u,(r=[{key:"open",value:function(e){p.src=e.link,p.alt=e.name,f.textContent=e.name,k(C(u.prototype),"open",this).call(this)}}])&&S(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),u}(b);function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function B(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function P(){return P="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=q(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},P.apply(this,arguments)}function q(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=x(e)););return e}function T(e,t){return T=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},T(e,t)}function I(e,t){if(t&&("object"===L(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function x(e){return x=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},x(e)}var R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&T(e,t)}(u,e);var t,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=x(n);if(o){var r=x(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return I(this,e)});function u(e,t){var r,n=t.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,e))._handleFormSubmit=n,r._popupForm=r._popup.querySelector(".popup__form"),r._popupFormInputs=r._popupForm.querySelectorAll(".popup__input"),r}return t=u,(r=[{key:"_getInputValues",value:function(){var e=this;return this._data={},this._popupFormInputs.forEach((function(t){e._data[t.id]=t.value})),this._data}},{key:"setEventListeners",value:function(){var e=this;this._popupForm.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues()),e.close()})),P(x(u.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){this._popupForm.reset(),P(x(u.prototype),"close",this).call(this)}}])&&B(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),u}(b);function F(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var N=new(function(){function e(t){var r=t.userNameSelector,n=t.userProfileSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userNameSelector=document.querySelector(r),this._userProfileSelector=document.querySelector(n)}var t,r;return t=e,(r=[{key:"getUserInfo",value:function(){return this._user={},this._user.user=this._userNameSelector.textContent,this._user.profile=this._userProfileSelector.textContent,this._user}},{key:"setUserInfo",value:function(e){this._userNameSelector.textContent=e.user,this._userProfileSelector.textContent=e.profile}}])&&F(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}())({userNameSelector:".user__name",userProfileSelector:".user__profile"}),V=new R(r,{handleFormSubmit:function(e){N.setUserInfo(e)}}),D=new R(n,{handleFormSubmit:function(e){U(e)}}),A=new j(u);function U(e){var t=new y(e,{handleCardClick:function(){A.open(e),A.setEventListeners()},cardTemplateSelector:".template-card"}).createCard();z.addCardToContainer(t)}var z=new t({items:[{name:"Архыз",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg"},{name:"Челябинская область",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg"},{name:"Иваново",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg"},{name:"Камчатка",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg"},{name:"Холмогорский район",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg"},{name:"Байкал",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg"}],renderer:function(e){U(e)}},".cards");z.renderCards();var M=new v(d,l),G=new v(d,s);o.addEventListener("click",(function(){var e=N.getUserInfo();c.value=e.user,a.value=e.profile,M.resetError(),V.open()})),i.addEventListener("click",(function(){G.resetError(),D.open()})),V.setEventListeners(),D.setEventListeners(),M.enableValidation(),G.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,